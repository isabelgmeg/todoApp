{"ast":null,"code":"var _jsxFileName = \"/Users/isabelgarcia/Desktop/BOOTCAMP/REACT/06-ENERO/todo2/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //recibe el Value y la función para cambiarlo. El useState es de react\n  //useState recibe al principio un string vacío ya que no existe texto al principio\n  //useState= hook de react \n  const [text, setText] = useState(''); //useState recibe un array vacío que será el estado de la lista cuando está vacía.\n\n  const [todoList, setTodo] = useState([]);\n  const [removedTodo, setRemove] = useState(''); // const handleClick = unit => setValue(value + unit)\n\n  const handleChange = event => setText(event.target.value);\n\n  const removeInputText = () => {\n    setText('');\n  };\n\n  const addTodo = () => {\n    const newTodoList = todoList.concat(text);\n    setTodo(newTodoList);\n    removeInputText();\n  };\n\n  const handleRemove = event => setRemove(event.target.value);\n\n  const removeTodo = () => {\n    const newRemovedList = todoList.filter(item => item !== removedTodo);\n    console.log(newRemovedList);\n    setRemove(newRemovedList);\n  };\n\n  console.log(text); //console.log('todo list ', todoList)\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        value: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTodo,\n        children: \"ADD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: removeInputText,\n        children: \"CLEAN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [todoList.map((todo, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: todo\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)), todoList.map((removedTodo, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: removeTodo,\n            value: toBeRemovedTodo,\n            children: \"DONE!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"nPs0LYeyl5LeUgYsuwVR8uOJw2k=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/isabelgarcia/Desktop/BOOTCAMP/REACT/06-ENERO/todo2/src/App.js"],"names":["useState","App","text","setText","todoList","setTodo","removedTodo","setRemove","handleChange","event","target","value","removeInputText","addTodo","newTodoList","concat","handleRemove","removeTodo","newRemovedList","filter","item","console","log","map","todo","index","toBeRemovedTodo"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AAEf;AACA;AACA;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,EAAD,CAAhC,CALe,CAOf;;AACA,QAAM,CAACI,QAAD,EAAWC,OAAX,IAAsBL,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAM,CAACM,WAAD,EAAcC,SAAd,IAA2BP,QAAQ,CAAC,EAAD,CAAzC,CAVe,CAaf;;AACA,QAAMQ,YAAY,GAAGC,KAAK,IAAIN,OAAO,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAArC;;AAEA,QAAMC,eAAe,GAAG,MAAK;AAC3BT,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD,GAFD;;AAIA,QAAMU,OAAO,GAAG,MAAM;AACpB,UAAMC,WAAW,GAAGV,QAAQ,CAACW,MAAT,CAAgBb,IAAhB,CAApB;AACAG,IAAAA,OAAO,CAACS,WAAD,CAAP;AACAF,IAAAA,eAAe;AAChB,GAJD;;AAMA,QAAMI,YAAY,GAAGP,KAAK,IAAIF,SAAS,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAvC;;AAEA,QAAMM,UAAU,GAAG,MAAM;AACtB,UAAMC,cAAc,GAAGd,QAAQ,CAACe,MAAT,CAAgBC,IAAI,IAAIA,IAAI,KAAKd,WAAjC,CAAvB;AACAe,IAAAA,OAAO,CAACC,GAAR,CAAYJ,cAAZ;AACAX,IAAAA,SAAS,CAACW,cAAD,CAAT;AACF,GAJD;;AAMAG,EAAAA,OAAO,CAACC,GAAR,CAAYpB,IAAZ,EAlCe,CAmCf;;AACE,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACF;AAAO,QAAA,QAAQ,EAAEM,YAAjB;AAA+B,QAAA,KAAK,EAAEN;AAAtC;AAAA;AAAA;AAAA;AAAA,cADE,eAEF;AAAQ,QAAA,OAAO,EAAEW,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFE,eAGF;AAAQ,QAAA,OAAO,EAAED,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHE;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAA,6BACE;AAAA,+BACE;AAAA,qBAEER,QAAQ,CAACmB,GAAT,CAAa,CAACC,IAAD,EAAOC,KAAP,kBACb;AAAA,sBAAiBD;AAAjB,aAASC,KAAT;AAAA;AAAA;AAAA;AAAA,kBADA,CAFF,EAMErB,QAAQ,CAACmB,GAAT,CAAa,CAACjB,WAAD,EAAcmB,KAAd,kBACb;AAAQ,YAAA,OAAO,EAAER,UAAjB;AAA4B,YAAA,KAAK,EAAES,eAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,CANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;GA7DQzB,G;;KAAAA,G;AAgET,eAAeA,GAAf","sourcesContent":["import { useState } from 'react'\n\n\nfunction App() {\n\n//recibe el Value y la función para cambiarlo. El useState es de react\n//useState recibe al principio un string vacío ya que no existe texto al principio\n//useState= hook de react \nconst [text, setText] = useState('')\n\n//useState recibe un array vacío que será el estado de la lista cuando está vacía.\nconst [todoList, setTodo] = useState([])\n\nconst [removedTodo, setRemove] = useState('')\n\n\n// const handleClick = unit => setValue(value + unit)\nconst handleChange = event => setText(event.target.value)\n\nconst removeInputText = () =>{\n  setText('')\n}\n\nconst addTodo = () => {\n  const newTodoList = todoList.concat(text)\n  setTodo(newTodoList)\n  removeInputText()\n}\n\nconst handleRemove = event => setRemove(event.target.value)\n\nconst removeTodo = () => {\n   const newRemovedList = todoList.filter(item => item !== removedTodo)\n   console.log(newRemovedList)\n   setRemove(newRemovedList)\n}\n\nconsole.log(text)\n//console.log('todo list ', todoList)\n  return (\n    <section>\n      <div className=\"container\">\n    <input onChange={handleChange} value={text}/>\n    <button onClick={addTodo}>ADD</button>\n    <button onClick={removeInputText}>CLEAN</button>\n      </div>\n      <div>\n        <ul>\n          <div>\n            {\n            todoList.map((todo, index)=>\n            <li key={index}>{todo}</li>)\n            }\n            {\n            todoList.map((removedTodo, index)=>\n            <button onClick={removeTodo}value={toBeRemovedTodo}>DONE!</button>)\n            }\n          \n          </div>\n        </ul>\n      </div>\n\n    </section>\n  )\n}\n\n\nexport default App"]},"metadata":{},"sourceType":"module"}