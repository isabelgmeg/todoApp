{"ast":null,"code":"var _jsxFileName = \"/Users/isabelgarcia/Desktop/BOOTCAMP/REACT/06-ENERO/todo2/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //recibe el Value y la función para cambiarlo. El useState es de react\n  //useState recibe al principio un string vacío ya que no existe texto al principio\n  const [text, setText] = useState(''); //useState recibe un array vacío que será el estado de la lista cuando está vacía.\n\n  const [todoList, setTodo] = useState([]); // const handleClick = unit => setValue(value + unit)\n\n  const handleChange = event => setText(event.target.value);\n\n  const addTodo = () => {\n    const newTodoList = todoList.concat(text);\n    setTodo(newTodoList);\n\n    const showTodoList = newTodoList => {\n      return /*#__PURE__*/_jsxDEV(\"section\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: newTodoList.map((todo, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: todo\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 42\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this);\n    };\n  };\n\n  const removeInputText = () => {\n    setText('');\n  };\n\n  console.log('hola ', text);\n  console.log('boton ', todoList);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        value: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTodo,\n        children: \"ADD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: removeInputText,\n        children: \"CLEAN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: newTodoList.map((todo, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: todo\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 44\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"+ntCLOXvvO2bpv7/ldpkuS75eWI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/isabelgarcia/Desktop/BOOTCAMP/REACT/06-ENERO/todo2/src/App.js"],"names":["useState","App","text","setText","todoList","setTodo","handleChange","event","target","value","addTodo","newTodoList","concat","showTodoList","map","todo","index","removeInputText","console","log"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AAEf;AACA;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,EAAD,CAAhC,CAJe,CAMf;;AACA,QAAM,CAACI,QAAD,EAAWC,OAAX,IAAsBL,QAAQ,CAAC,EAAD,CAApC,CAPe,CAUf;;AACA,QAAMM,YAAY,GAAGC,KAAK,IAAIJ,OAAO,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAArC;;AAEA,QAAMC,OAAO,GAAG,MAAM;AACpB,UAAMC,WAAW,GAAGP,QAAQ,CAACQ,MAAT,CAAgBV,IAAhB,CAApB;AACAG,IAAAA,OAAO,CAACM,WAAD,CAAP;;AACA,UAAME,YAAY,GAAIF,WAAD,IAAgB;AACnC,0BACI;AAAA,+BACJ;AAAA,oBAAKA,WAAW,CAACG,GAAZ,CAAgB,CAACC,IAAD,EAAOC,KAAP,kBAAgB;AAAA,sBAAiBD;AAAjB,aAASC,KAAT;AAAA;AAAA;AAAA;AAAA,kBAAhC;AAAL;AAAA;AAAA;AAAA;AAAA;AADI;AAAA;AAAA;AAAA;AAAA,cADJ;AAOD,KARD;AASD,GAZD;;AAeA,QAAMC,eAAe,GAAG,MAAK;AAC3Bd,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD,GAFD;;AAKAe,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBjB,IAArB;AACAgB,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBf,QAAtB;AACE,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACF;AAAO,QAAA,QAAQ,EAAEE,YAAjB;AAA+B,QAAA,KAAK,EAAEJ;AAAtC;AAAA;AAAA;AAAA;AAAA,cADE,eAEF;AAAQ,QAAA,OAAO,EAAEQ,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFE,eAGF;AAAQ,QAAA,OAAO,EAAEO,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHE;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAA,6BACE;AAAA,kBACGN,WAAW,CAACG,GAAZ,CAAgB,CAACC,IAAD,EAAOC,KAAP,kBAAgB;AAAA,oBAAiBD;AAAjB,WAASC,KAAT;AAAA;AAAA;AAAA;AAAA,gBAAhC;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAlDQf,G;;KAAAA,G;AAsDT,eAAeA,GAAf","sourcesContent":["import { useState } from 'react'\n\n\nfunction App() {\n\n//recibe el Value y la función para cambiarlo. El useState es de react\n//useState recibe al principio un string vacío ya que no existe texto al principio\nconst [text, setText] = useState('')\n\n//useState recibe un array vacío que será el estado de la lista cuando está vacía.\nconst [todoList, setTodo] = useState([])\n\n\n// const handleClick = unit => setValue(value + unit)\nconst handleChange = event => setText(event.target.value)\n\nconst addTodo = () => {\n  const newTodoList = todoList.concat(text)\n  setTodo(newTodoList)\n  const showTodoList = (newTodoList) =>{\n    return (\n        <section>\n    <ul>{newTodoList.map((todo, index)=> <li key={index}>{todo}</li>) }\n          </ul>\n      </section>\n      \n    )\n  }\n}\n\n\nconst removeInputText = () =>{\n  setText('')\n}\n\n\nconsole.log('hola ', text)\nconsole.log('boton ', todoList)\n  return (\n    <section>\n      <div className=\"container\">\n    <input onChange={handleChange} value={text}/>\n    <button onClick={addTodo}>ADD</button>\n    <button onClick={removeInputText}>CLEAN</button>\n      </div>\n      <div>\n        <ul>\n          {newTodoList.map((todo, index)=> <li key={index}>{todo}</li>) }\n        </ul>\n      </div>\n\n    </section>\n  )\n}\n\n\n\nexport default App"]},"metadata":{},"sourceType":"module"}